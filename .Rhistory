ID_ESP <- read.csv("~/Lab/Proyecto/ID_ESP.csv", stringsAsFactors=TRUE)
View(ID_ESP)
#Libraries
library(fastbaps)
library(ape)
#Loading data OK
fasta.file.name <- "ESP.fq"
sparse.data <- import_fasta_sparse_nt(fasta.file.name)
View(ID_ESP)
View(ID_ESP)
ID_ESP <- read.table("~/Lab/Proyecto/ID_ESP.lst", quote="\"", comment.char="")
View(ID_ESP)
#Libraries
library(fastbaps)
library(ape)
#Loading data OK
fasta.file.name <- "ESP.fq"
sparse.data <- import_fasta_sparse_nt(fasta.file.name)
#Detalle OK
sparse.data <- optimise_prior(sparse.data, type = "baps")
#Running fastbaps "baps.hc" es el archivo a obtener.
baps.hc <- fast_baps(sparse.data)
# Obtener tablas
#Bayesian hierarchical partition
multi3 <- multi_res_baps(sparse.data, levels = 6)
View(multi3)
#Function to perform bootstrap replicated of fastbaps
boot.result <- boot_fast_baps(sparse.data)
#Libraries
library(fastbaps)
library(ape)
#Loading data OK
fasta.file.name <- "ESP.fq"
sparse.data <- import_fasta_sparse_nt(fasta.file.name)
#Detalle OK
sparse.data <- optimise_prior(sparse.data, type = "baps")
#Running fastbaps "baps.hc" es el archivo a obtener.
baps.hc <- fast_baps(sparse.data)
# Obtener tablas
#Bayesian hierarchical partition
ESP_baps <- multi_res_baps(sparse.data, levels = 4)
View(ESP_baps)
View(multi3)
rm (multi3)
head(boot.result)
View(ESP_baps)
head(ESP_baps)
View(ESP_baps)
ESP_baps [1,3]
ESP_baps [c1,3]
ESP_baps (1:3)
ESP_baps [1:3]
ESP_baps [1,3]
ESP_baps [,1,3]
ESP_baps [c(1,3)]
ESP_baps_lvl2 <- ESP_baps [c(1,3)]
View(ESP_baps_lvl2)
write.csv(ESP_baps_lvl2 file="ESP_baps_lvl2")
write.csv(ESP_baps_lvl2, file="ESP_baps_lvl2")
